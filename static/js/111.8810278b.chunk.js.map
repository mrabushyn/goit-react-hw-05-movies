{"version":3,"file":"static/js/111.8810278b.chunk.js","mappings":"gSAGMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wRAkBVE,EAAUF,EAAAA,GAAAA,GAAH,uFAMPG,EAAgBH,EAAAA,GAAAA,GAAH,mH,SCvBbI,EAAW,CACf,CAAEC,KAAM,OAAQC,KAAM,QACtB,CAAED,KAAM,UAAWC,KAAM,YAGdC,EAAmB,SAAAC,GAE9B,OACE,4BACE,SAACN,EAAD,yCACA,SAACC,EAAD,UACGC,EAASK,KAAI,gBAAGJ,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACZ,SAACP,EAAD,CACEW,GAAIL,EAEJG,MAAO,CAAEG,KAAI,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAOA,OAHxB,SAKGF,GAHID,EAHK,OAUhB,SAAC,EAAAO,SAAD,WACE,SAAC,KAAD,QAIP,E,QC3BKb,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0GASVa,EAAMb,EAAAA,GAAAA,IAAH,0CAGHc,EAAMd,EAAAA,GAAAA,IAAH,2EAKHe,EAAgBf,EAAAA,GAAAA,IAAH,oGAQbgB,EAAMhB,EAAAA,GAAAA,IAAH,iEAKHiB,EAAQjB,EAAAA,GAAAA,GAAH,kHAOLE,EAAUF,EAAAA,GAAAA,GAAH,yFAOPkB,EAASlB,EAAAA,GAAAA,IAAH,oEAMNmB,EAAKnB,EAAAA,GAAAA,GAAH,kD,SCjCRoB,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCA4EhB,EA1EqB,WAAO,IAAD,MACzB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE2BT,EAAAA,GAAAA,IAAA,gBACZK,EADY,oBACOJ,EADP,oBAF3B,OAEUS,EAFV,OAKIN,EAASM,EAASC,MALtB,gDAOIC,QAAQC,IAAR,MAPJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACT,IAGJ,IACEU,EAMEZ,EANFY,eACAC,EAKEb,EALFa,SACAC,EAIEd,EAJFc,YACAC,EAGEf,EAHFe,OACAC,EAEEhB,EAFFgB,aACAC,EACEjB,EADFiB,aAIIC,EADO,IAAIC,KAAKF,GACJG,cACZC,EAAsB,GAAfL,EAGTM,EAAY,UAAGlB,EAASnB,aAAZ,aAAG,EAAgBG,KAEnC,OACE,iCACG,SAAC,EAAD,CAAYD,GAAE,oBAAEiB,EAASnB,aAAX,aAAE,EAAgBG,YAAlB,QAA0B,IAAxC,qBACAY,IACC,UAACR,EAAD,YACE,SAACD,EAAD,WACE,SAACD,EAAD,CACEiC,IACET,EAAW,6CAC+BA,GACtCU,EAENC,IAAG,UAAKb,GACRc,MAAM,WAGV,UAACjC,EAAD,YACE,UAACC,EAAD,WACGkB,EADH,KACqBM,EADrB,QAGA,SAAC,EAAD,oBACA,UAACvB,EAAD,WAAS0B,EAAT,QACA,SAAC,EAAD,wBACA,SAAC1B,EAAD,UAASkB,KACT,SAAC,EAAD,sBACA,SAAClB,EAAD,UACGoB,GAAUA,EAAO7B,KAAI,gBAAGyC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,SAAChC,EAAD,UAAcgC,GAALD,EAA3B,aAK9B,SAAC3C,EAAD,CAAkBC,MAAOqC,MAG9B,C","sources":["components/Links/Links.styled.js","components/Links/Links.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst StyledLink = styled(NavLink)`\n  margin: 30px;\n  color: black;\n  font-size: 16px;\n  text-decoration: none;\n  cursor: pointer;\n\n  &.active {\n    color: rgb(255, 28, 6);\n    font-size: 18px;\n    font-weight: 700;\n  }\n\n  :hover:not(.active) {\n    color: rgb(255, 28, 6);\n  }\n`;\n\nconst TitleH2 = styled.h1`\n  font-size: 20px;\n  font-weight: 500;\n  margin: 25px 40px;\n`;\n\nconst LinkContainer = styled.ul`\n  margin: 15px;\n  font-size: 20px;\n  padding-bottom: 20px;\n  border-bottom: solid 1px;\n`;\n\nexport { TitleH2, StyledLink, LinkContainer };\n","import { Suspense } from 'react';\nimport { Outlet} from 'react-router-dom';\nimport { StyledLink, LinkContainer, TitleH2 } from './Links.styled';\n\nconst navItems = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'reviews', text: 'Reviews' },\n];\n\nexport const CastReviewsLinks = state => {\n\n  return (\n    <div>\n      <TitleH2> Additional information: </TitleH2>\n      <LinkContainer>\n        {navItems.map(({ href, text }) => (\n          <StyledLink\n            to={href}\n            key={href}\n            state={{ from: state?.state }}\n          >\n            {text}\n          </StyledLink>\n        ))}\n      </LinkContainer>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst StyledLink = styled(NavLink)`\n  margin: 30px;\n\n  font-size: 18px;\n  font-weight: 700;\n  cursor: pointer;\n\n`;\n\nconst Img = styled.img`\n  display: flex;\n`;\nconst Box = styled.div`\n  display: inline-block;\n  padding-right: 40px;\n}`;\n\nconst MainContainer = styled.div`\n  display: flex;\n  width: 80%;\n  padding: 8px 16px;\n  margin: 15px;\n  \n`;\n\nconst Div = styled.div`\n  display: row;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 22px;\n  font-weight: 650;\n  padding-bottom: 20px;\n  padding-top: 20px;\n\n`;\nconst TitleH2 = styled.h1`\n  font-size: 18px;\n  font-weight: 500;\n  align-items: center;\n`;\n\n\nconst Inform = styled.div`\n  display: flex;\n  align-items: center;\n\n`;\n\nconst Li = styled.li`\n  padding-right: 15px;\n\n`;\nexport { Img, Box, Div, MainContainer, Title, Inform, TitleH2, Li, StyledLink };\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { CastReviewsLinks } from '../../components/Links/Links';\n\nimport axios from 'axios';\nimport {\n  Img,\n  Box,\n  Div,\n  MainContainer,\n  Title,\n  Inform,\n  TitleH2,\n  Li,\n  StyledLink,\n} from './MovieDetails.styled';\n\nimport defImg from '../../image/defImg.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f09951289a6b6bcb457d17314bf86aca';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n\n  useEffect(() => {\n    async function fatchData() {\n      try {\n        const response = await axios.get(\n          `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n        );\n        setMovie(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fatchData();\n  }, [movieId]);\n\n\n  let {\n    original_title,\n    overview,\n    poster_path,\n    genres,\n    vote_average,\n    release_date,\n  } = movie;\n\n  const date = new Date(release_date);\n  const year = date.getFullYear();\n  const vote = vote_average * 10;\n\n\nconst listLocation = location.state?.from;\n\n  return (\n    <>\n      {<StyledLink to={location.state?.from ?? '/'}>Go back</StyledLink>}\n      {movie && (\n        <MainContainer>\n          <Box>\n            <Img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/original${poster_path}`\n                  : defImg\n              }\n              alt={`${original_title}`}\n              width=\"300\"\n            />\n          </Box>\n          <Div>\n            <Title>\n              {original_title} ({year})\n            </Title>\n            <TitleH2>Vote</TitleH2>\n            <Inform>{vote}%</Inform>\n            <TitleH2>Overview</TitleH2>\n            <Inform>{overview}</Inform>\n            <TitleH2>Genres</TitleH2>\n            <Inform>\n              {genres && genres.map(({ id, name }) => <Li key={id}>{name}</Li>)}\n            </Inform>\n          </Div>\n        </MainContainer>\n      )}\n      <CastReviewsLinks state={listLocation} />\n    </>\n  );\n};\n\n\nexport default MovieDetails"],"names":["StyledLink","styled","NavLink","TitleH2","LinkContainer","navItems","href","text","CastReviewsLinks","state","map","to","from","Suspense","Img","Box","MainContainer","Div","Title","Inform","Li","axios","API_KEY","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","response","data","console","log","fatchData","original_title","overview","poster_path","genres","vote_average","release_date","year","Date","getFullYear","vote","listLocation","src","defImg","alt","width","id","name"],"sourceRoot":""}