{"version":3,"file":"static/js/779.e104e2d4.chunk.js","mappings":"+QAEMA,EAAUC,EAAAA,GAAAA,GAAH,uFAMPC,EAAYD,EAAAA,GAAAA,GAAH,4FAOTE,EAAOF,EAAAA,GAAAA,GAAH,iEAQJG,EAASH,EAAAA,GAAAA,EAAH,kE,SClBZI,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAmChB,EAjCqB,WACnB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE2BP,EAAAA,GAAAA,IAAA,gBACZK,EADY,4BACeJ,EADf,oBAF3B,OAEUO,EAFV,OAKIJ,EAAWI,EAASC,KAAKC,SAL7B,gDAOIC,QAAQC,IAAR,MAPJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACR,KAGF,SAACR,EAAD,UAC0B,IAAvBM,EAAYW,QACT,SAACf,EAAD,2BACAI,EAAYY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACd,UAACpB,EAAD,YACE,UAACH,EAAD,sBAAkBqB,MAClB,SAACjB,EAAD,UAASkB,MAFAC,EADG,KAQzB,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst TitleH2 = styled.h1`\n  font-size: 18px;\n  font-weight: 500;\n  margin: 25px 40px;\n`;\n\nconst Container = styled.ul`\n  margin: 15px;\n  font-size: 20px;\n  padding-bottom: 10px;\n\n  \n`;\nconst Item = styled.li`\n  margin: 15px;\n  font-size: 18px;\n\n\n`;\n\n\nconst Inform = styled.p`\n  display: flex;\n  align-items: center;\n`;\n\nexport { Container, TitleH2, Inform, Item };\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, TitleH2, Inform, Item } from './Reviews.styled';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f09951289a6b6bcb457d17314bf86aca';\n\nconst MovieReviews = () => {\n  const [reviewsList, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fatchData() {\n      try {\n        const response = await axios.get(\n          `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n        );\n        setReviews(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fatchData();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {reviewsList.length === 0\n        ? <Inform> No reviews </Inform>\n        : reviewsList.map(({ author, content, id }) => (\n            <Item key={id}>\n              <TitleH2>Author: {author}</TitleH2>\n              <Inform>{content}</Inform>\n            </Item>\n          ))}\n    </Container>\n  );\n};\n\n\nexport default MovieReviews"],"names":["TitleH2","styled","Container","Item","Inform","axios","API_KEY","useState","reviewsList","setReviews","movieId","useParams","useEffect","response","data","results","console","log","fatchData","length","map","author","content","id"],"sourceRoot":""}