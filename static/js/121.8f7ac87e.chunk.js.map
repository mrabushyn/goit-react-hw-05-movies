{"version":3,"file":"static/js/121.8f7ac87e.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAY,UACZC,SAAS,UACTC,UAAU,UAGf,C,8KCbKC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6PAgBVE,EAAQF,EAAAA,GAAAA,MAAH,wSAoBLG,EAASH,EAAAA,GAAAA,OAAH,2mB,kBChCZI,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAgGhB,EA9FkB,WAAO,IAAD,EAChBC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,MAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAGAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+GAE2BX,EAAAA,GAAAA,IAAA,+BACGC,EADH,kBACoBI,EADpB,+CAF3B,OAEUO,EAFV,OAKUC,EAAuBD,EAASE,KAAKC,QAC3CP,EAAgBK,GAChBH,GAAW,GAPf,gDASI,KAAMM,QAAU,gCAChBC,QAAQC,IAAI,KAAMF,SAVtB,0DADc,uBAAC,WAAD,wBAcdG,EACD,GAAE,CAACd,IAEJ,IAcIe,EAAgB,GAGpB,OAFEA,EAAa,UAAGlB,EAASmB,aAAZ,aAAG,EAAgBC,GAGhC,4BACE,kBAAMC,SAnBW,SAAAC,GACnBA,EAAIC,iBACJf,GAAW,GACX,IAAMgB,EAAcF,EAAIG,OAAOC,SAASC,KAAKC,MAC7CxB,EAAcoB,GAEdhB,GAAW,GAES,KAAhBgB,IACFhB,GAAW,GACXqB,MAAM,qIAET,EAOG,WACE,SAACjC,EAAD,CAAOkC,KAAK,OAAOC,KAAK,OAAOC,YAAY,kBAEzC,SAACnC,EAAD,CAAQiC,KAAK,WAAb,UACE,SAAC,MAAD,UAIN,4BACGvB,IAAW,SAACxB,EAAA,EAAD,KACZ,yBACGsB,GACyB,IAAxBA,EAAa4B,QACb,8JAEH5B,IACC,wBACGA,EAAa6B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBL,EAAvB,EAAuBA,KAAvB,OAChB,SAACtC,EAAD,CACE4C,GAAE,UAAKF,GAEPhB,MAAO,CAAEmB,KAAMtC,EAAUuC,IAAKlC,GAHhC,SAKG+B,GAAkCL,GAH9BI,EAHS,MAWrBjB,IACEb,IACC,wBACGa,EAAcgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBL,EAAvB,EAAuBA,KAAvB,OACjB,SAACtC,EAAD,CACE4C,GAAE,UAAKF,GAEPhB,MAAO,CACLmB,KAAMtC,EACNuC,IAAKrB,GALT,SAQGkB,GAAkCL,GAN9BI,EAHU,WAiBhC,C","sources":["components/Loader/Loader.jsx","pages/Movie/Movie.styled.js","pages/Movie/Movie.jsx"],"sourcesContent":["import { ProgressBar } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ProgressBar\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"progress-bar-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"progress-bar-wrapper\"\n      borderColor=\"#F4442E\"\n      barColor=\"#51E5FF\"\n      alignItem='center'\n    />\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst StyledLink = styled(NavLink)`\n  display: grid;\n  margin-right: 70%;\n  color: black;\n  font-size: 18px;\n  text-decoration: dotted;\n\n  & .active {\n    color: black;\n  }\n\n  :hover:not(.active) {\n    color: rgb(255, 72, 0);\n    font-size: 22px;\n  }\n`;\nconst Input = styled.input`\n  display: inline-block;\n  width: 20%;\n  font: inherit;\n  font-size: 16px;\n  height: 26px;\n  border:solid 2px red;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  margin: 20px;\n\n}\n\n.input::placeholder {\n  font: inherit;\n  font-size: 16px;\n}\n`;\n\nconst Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: red;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 16px;\n  line-height: 6px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 30px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n:hover:not(.button),\n:focus:not(.button) {\n  background-color: #303f9f;\n}\n`;\n\n\nexport { StyledLink, Input, Button };\n","import { useState, useEffect } from 'react';\nimport { Loader } from '../../components/Loader/Loader';\nimport { BsSearch } from 'react-icons/bs';\nimport axios from 'axios';\nimport { StyledLink, Input, Button } from './Movie.styled';\nimport { useLocation } from 'react-router-dom';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f09951289a6b6bcb457d17314bf86aca';\n\nconst SearchBox = () => {\n  const location = useLocation();\n  const [searchText, setSearchText] = useState('');\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n\n  useEffect(() => {\n    async function fatchData() {\n      try {\n        const response = await axios.get(\n          `search/movie?api_key=${API_KEY}&query=${searchText}&language=en-US&page=1&include_adult=false`\n        );\n        const searchMoviesResponse = response.data.results;\n        setSearchMovies(searchMoviesResponse);\n        setLoading(false);\n      } catch (error) {\n        error.message = 'how to turn off first render?';\n        console.log(error.message);\n      }\n    }\n    fatchData();\n  }, [searchText]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setLoading(true);\n    const inputSearch = evt.target.elements.text.value;\n    setSearchText(inputSearch);\n    // setSearchParams(inputSearch !== '' ? { query: inputSearch } : {});\n    setLoading(false);\n\n    if (inputSearch === '') {\n      setLoading(false);\n      alert('Введіть текст для пошуку');\n    }\n  };\n\n  let arrayOfMovies = [];\n    arrayOfMovies = location.state?.a;\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"text\" placeholder=\"Search movie\" />\n        {\n          <Button type=\"onChange\">\n            <BsSearch />\n          </Button>\n        }\n      </form>\n      <main>\n        {loading && <Loader />}\n        <div>\n          {searchMovies &&\n            searchMovies.length === 0 &&\n            'Здається такого фільму немає'}\n        </div>\n        {searchMovies && (\n          <ul>\n            {searchMovies.map(({ id, original_title, name }) => (\n              <StyledLink\n                to={`${id}`}\n                key={id}\n                state={{ from: location, arr: searchMovies }}\n              >\n                {original_title ? original_title : name}\n              </StyledLink>\n            ))}\n          </ul>\n        )}\n        {arrayOfMovies &&\n          !searchMovies && (\n            <ul>\n              {arrayOfMovies.map(({ id, original_title, name }) => (\n                <StyledLink\n                  to={`${id}`}\n                  key={id}\n                  state={{\n                    from: location,\n                    arr: arrayOfMovies,\n                  }}\n                >\n                  {original_title ? original_title : name}\n                </StyledLink>\n              ))}\n            </ul>\n          )}\n      </main>\n    </div>\n  );\n};\n\n\nexport default SearchBox;"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","alignItem","StyledLink","styled","NavLink","Input","Button","axios","API_KEY","location","useLocation","useState","searchText","setSearchText","searchMovies","setSearchMovies","loading","setLoading","useEffect","response","searchMoviesResponse","data","results","message","console","log","fatchData","arrayOfMovies","state","a","onSubmit","evt","preventDefault","inputSearch","target","elements","text","value","alert","type","name","placeholder","length","map","id","original_title","to","from","arr"],"sourceRoot":""}